DROP TABLE STATE_EQUAL_OWNER.AUDITORS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDITORS
(
  AUDITOR_NAME  	VARCHAR2(100 BYTE),
  AUDIT_ROLE    	VARCHAR2(50 BYTE),
  AUDITOR_ID      	INTEGER,
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL, 
  ID            	NUMBER(19),
  VERSION       	NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDITORS_KEY ON STATE_EQUAL_OWNER.AUDITORS
(AUDITOR_ID, AUDIT_ROLE);

ALTER TABLE STATE_EQUAL_OWNER.AUDITORS ADD (
  CONSTRAINT AUDITORS_KEY
  PRIMARY KEY
  (AUDITOR_ID, AUDIT_ROLE)
  USING INDEX STATE_EQUAL_OWNER.AUDITORS_KEY
  ENABLE VALIDATE);



-- ID and Version are needed for Engineer to work with hiibernate.These are part of all the tables which have been defined.

DROP TABLE STATE_EQUAL_OWNER.AUDIT_CONTACTS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_CONTACTS
(
  DISTRICT_NUMBER            VARCHAR2(5 BYTE),
  AUDIT_ID                   INTEGER,  
  CONTACT_TYPE               VARCHAR2(20 BYTE),  --where the contact_type can be PUPIL_COUNT, AT_RISK, TRANS, SUPER, OTHER or a new one
  CONTACT_EMAIL        	     VARCHAR2(100 BYTE),
  CONTACT_PHONE              VARCHAR2(20 BYTE),
  CONTACT_NAME               VARCHAR2(200 BYTE),
  UPDATE_TIMESTAMP           DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	     VARCHAR2(100 BYTE)        NOT NULL, 
  ID                         NUMBER(19),
  VERSION                    NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_CONTACTS_PK ON STATE_EQUAL_OWNER.AUDIT_CONTACTS
(AUDIT_ID, CONTACT_TYPE)


ALTER TABLE STATE_EQUAL_OWNER.AUDIT_CONTACTS ADD (
  CONSTRAINT AUDIT_CONTACTS_PK
  PRIMARY KEY
  (AUDIT_ID, CONTACT_TYPE)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_CONTACTS_PK
  ENABLE VALIDATE);



DROP TABLE STATE_EQUAL_OWNER.AUDIT_CSI CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_CSI
(
  DISTRICT_NUMBER     VARCHAR2(6 BYTE),
  DATE_CHANGED        DATE,
  CHANGE_TYPE         VARCHAR2(2 BYTE),
  CSI_NUMBER          NUMBER,
  CSI_K_12_FTE_CNT    NUMBER,
  CSI_SUPPLEMENTAL_K  NUMBER,
  CSI_ONLINE_CNT      NUMBER,
  CSI_FL_1_8_CNT      NUMBER,
  CSI_FL_K_12_CNT     NUMBER,
  CSI_MEM_1_8_CNT     NUMBER,
  CSI_MEM_K_12_CNT    NUMBER,
  CSI_CPP_CNT         NUMBER,
  CSI_KIND_FTE_CNT    NUMBER,
  FISCAL_YEAR         VARCHAR2(8 BYTE),
  CSI_ASCENT_CNT      NUMBER,
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL, 
  AUDIT_ID            INTEGER,
  ID                  NUMBER(19),
  VERSION             NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_CSI_PK ON STATE_EQUAL_OWNER.AUDIT_CSI
(DISTRICT_NUMBER, FISCAL_YEAR, AUDIT_ID);



ALTER TABLE STATE_EQUAL_OWNER.AUDIT_CSI ADD (
  CONSTRAINT AUDIT_CSI_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, AUDIT_ID)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_CSI_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.AUDIT_EQUAL CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_EQUAL  -- We would really like to move the variables from here to the variables table 
(
  DISTRICT_NUMBER                VARCHAR2(6 BYTE),
  DATE_CHANGED                   DATE,
  CHANGE_TYPE                    VARCHAR2(2 BYTE),
  SPECED_PK                      NUMBER(16,6),
  FUNDED_PUPIL_COUNT             NUMBER(6),
  ASSESSED_VAL                   NUMBER(16,6),
  CAT_TRANSPORTATION             NUMBER(16,6),
  CAT_VOCED                      NUMBER(16,6),
  CAT_ELPA                       NUMBER(16,6),
  CAT_SPED_DISABILITIES          NUMBER(16,6),
  CAT_SPED_GIFTED_TALENTED       NUMBER(16,6),
  SIZE_FACTOR                    NUMBER(16,6),
  COST_OF_LIVING_FACTOR          NUMBER(16,6),
  PERSONNEL_COST_FACTOR          NUMBER(16,6),
  FORMULA_TP_WO_AT_RISK          NUMBER(16,6),
  FREE_LUNCH_1_8                 NUMBER(16,6),
  FREE_LUNCH_K_12                NUMBER(16,6),
  MEMBER_1_8                     NUMBER(16,6),
  TOTAL_PROGRAM_AT_RISK          NUMBER(16,6),
  GRAND_TOTAL_PROGRAM            NUMBER(16,6),
  SOT_GROSS                      NUMBER(16,6),
  CALC_TOTAL_PROGRAM_MILL_LEVY   NUMBER(16,6),
  PROPERTY_TAX                   NUMBER(16,6),
  STATE_EQUAL_OWNER              NUMBER(16,6),
  CERT_TOTAL_PROGRAM_MILL_LEVY   NUMBER(16,6),
  MILL_LEVY_ADJ                  NUMBER(16,6),
  MONTH_ENTITLE                  NUMBER(16,6),
  YTD_ENTITLE                    NUMBER(16,6),
  MONTH_PAYMENT                  NUMBER(16,6),
  YTD_PAYMENT                    NUMBER(16,6),
  ADJ_OODS                       NUMBER(16,6),
  YTD_OODS                       NUMBER(16,6),
  ADJ_OTHER                      NUMBER(16,6),
  YTD_OTHER                      NUMBER(16,6),
  ADJ_SWAP                       NUMBER(16,6),
  YTD_SWAP                       NUMBER(16,6),
  ALLOW_SPEND                    NUMBER(16,6),
  CAT_LEVY_ADJ                   NUMBER(16,6),
  CERT_CAT_BUY_MILL_LEVY         NUMBER(16,6),
  CALC_CAT_BUY_MILL_LEVY         NUMBER(16,6),
  TOTAL_PROGRAM_TABOR            NUMBER(16,6),
  TOTAL_FUND_INCLUDING_ONLINE    NUMBER(16,6),
  TOTAL_MAX_FUND                 NUMBER(16,6),
  TOTAL_ADD_FUND                 NUMBER(16,6),
  MEMBER_K_12                    NUMBER(16,6),
  FUNDED_AT_RISK_COUNT           NUMBER(16,6),
  FORMULA_PUPIL_FUND             NUMBER(16,6),
  TOTAL_AT_RISK_FUNDING          NUMBER(16,6),
  CSI_ADMIN_MONTH                NUMBER(16,6),
  MINIMUM_FORMULA_FUND           NUMBER(16,6),
  DISTRICT_CERT_TOTAL_ADD_FUND   NUMBER(16,6),
  SOT_NET                        NUMBER(16,6),
  FTE                            NUMBER(16,6),
  CHARTER_SCHOOL_FPC             NUMBER(16,6),
  SMALL_CENTER_PAYMENTS          NUMBER(16,6),
  ESL_CSAP                       NUMBER(16,6),
  MULTI_DISTRICT_ONLINE_FTE      NUMBER(16,6),
  SINGLE_DISTRICT_ONLINE_FTE     NUMBER(16,6),
  CPP                            NUMBER(16,6),
  CHARTER_DEBT_MONTH             NUMBER(16,6),
  CHARTER_DEBT_YTD               NUMBER(16,6),
  CSI_TOTAL_PROGRAM_FUND         NUMBER(16,6),
  CSI_ADMIN_YTD                  NUMBER(16,6),
  NEG_FACTOR                     NUMBER(16,6),
  TOTAL_PROGRAM_CAT_BUYOUT       NUMBER(16,6),
  DISTRICT_CHARTER_FTE_COUNT     NUMBER(16,6),
  MONTH_AUDIT_REPAY              NUMBER(16,6),
  YTD_AUDIT_REPAY                NUMBER(16,6),
  FISCAL_YEAR                    VARCHAR2(8 BYTE),
  ADJ_DISTRICT_TOTAL_PROGRAM     NUMBER(16,6),
  AT_RISK_BASE_FACTOR            NUMBER(16,6),
  BASE_PER_PUPIL_FUND            NUMBER(16,6),
  MINIMUM_STATE_AID              NUMBER(16,6),
  STATE_AVERAGE_AT_RISK_PERCENT  NUMBER(16,6),
  STATE_EQUAL_OWNER_ADJUST       NUMBER(16,6),
  FULL_FUNDING_MILL              NUMBER(16,6),
  SOT_ADJ_PERCENT                NUMBER(16,6),
  TABOR_MILL                     NUMBER(16,6),
  AUDIT_ID                       INTEGER,
  UPDATE_TIMESTAMP      	DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		VARCHAR2(100 BYTE)        NOT NULL, 
  ID                            NUMBER(19),
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_EQUAL_PK ON STATE_EQUAL_OWNER.AUDIT_EQUAL
(DISTRICT_NUMBER, AUDIT_ID, FISCAL_YEAR);


ALTER TABLE STATE_EQUAL_OWNER.AUDIT_EQUAL ADD (
  CONSTRAINT AUDIT_EQUAL_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, AUDIT_ID, FISCAL_YEAR)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_EQUAL_PK
  ENABLE VALIDATE);

DROP TABLE STATE_EQUAL_OWNER.AUDIT_FREE_LUNCH CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_FREE_LUNCH
(
  DISTRICT_NUMBER  VARCHAR2(6 BYTE),
  DATE_CHANGED     DATE,
  CHANGE_TYPE      VARCHAR2(2 BYTE),
  LUNCH_F      	   NUMBER,
  GRADE_LEVEL      VARCHAR2(8 BYTE), -- New field, identifies the grade for which the lunch is
  FISCAL_YEAR      VARCHAR2(8 BYTE),
  AUDIT_ID         INTEGER,
  UPDATE_TIMESTAMP DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID          VARCHAR2(100 BYTE)        NOT NULL, 
  ID               NUMBER(19),
  VERSION          NUMBER(19)
);

ALTER TABLE STATE_EQUAL_OWNER.AUDIT_FREE_LUNCH ADD (
  PRIMARY KEY
  (DISTRICT_NUMBER, GRADE_LEVEL, FISCAL_YEAR);

DROP TABLE STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE
(
  DISTRICT_NUMBER   VARCHAR2(6 BYTE),
  DATE_CHANGED      DATE,
  CHANGE_TYPE       VARCHAR2(2 BYTE),
  MEMBER            NUMBER(16,6),
  CDE_MEMBER        NUMBER(16,6),
  PARTTIME_H        NUMBER(16,6),
  PARTTIME_F        NUMBER(16,6),
  ONLINE_TOT        NUMBER(16,6),
  FTE_NOT_ELIG       NUMBER(16,6),
  FTE_ELIG          NUMBER(16,6),
  FUNDED_COUNT      NUMBER(16,6),
  ASCENT            NUMBER(16,6),
  OUT_OF_DIST       NUMBER(16,6),
  GRADE_LEVEL       VARCHAR2(8 BYTE),
  FISCAL_YEAR       VARCHAR2(8 BYTE),
  AUDIT_ID          INTEGER,
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL, 
  ID                NUMBER(19),
  VERSION           NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE_PK ON STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE
(DISTRICT_NUMBER, GRADE_LEVEL, FISCAL_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE ADD (
  CONSTRAINT AUDIT_FTE_BY_GRADE_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, GRADE_LEVEL, FISCAL_YEAR, AUDIT_ID)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_FTE_BY_GRADE_PK
  ENABLE VALIDATE);




DROP TABLE STATE_EQUAL_OWNER.AUDIT_HOURS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_HOURS
(
  AUDIT_ID                     INTEGER,
  PROGRAM_NAME                 VARCHAR2(50 BYTE),
  HOURS_SPENT_PRIMARY_AUDITOR  NUMBER(16,6),
  HOURS_SPENT_SECOND_AUDITOR   NUMBER(16,6),
  UPDATE_TIMESTAMP      	DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		VARCHAR2(100 BYTE)        NOT NULL, 
  ID                            NUMBER(19)        NOT NULL, 
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_HOURS_PK ON STATE_EQUAL_OWNER.AUDIT_HOURS
(AUDIT_ID, PROGRAM_NAME);


ALTER TABLE STATE_EQUAL_OWNER.AUDIT_HOURS ADD (
  CONSTRAINT AUDIT_HOURS_PK
  PRIMARY KEY
  (AUDIT_ID, PROGRAM_NAME)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_HOURS_PK
  ENABLE VALIDATE);



DROP TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAMS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAMS
(
  AUDIT_ID                      INTEGER,
  PROGRAM_NAME                  VARCHAR2(50 BYTE),
  PROGRAM_ID   			INTEGER 
  FISCAL_YEAR                   VARCHAR2(8 BYTE),
  ORIGINAL_ORGANIZATION_AMOUNT  NUMBER(16,6),
  ADJUSTED_AUDIT_AMOUNT         NUMBER(16,6),
  UPDATE_TIMESTAMP      	DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		VARCHAR2(100 BYTE)        NOT NULL, 
  ID                            NUMBER(19)    NOT NULL, 
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_PROGRAM_PK ON STATE_EQUAL_OWNER.AUDIT_PROGRAM
(AUDIT_ID, PROGRAM_NAME, FISCAL_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAM ADD (
  PRIMARY KEY
  (AUDIT_ID, PROGRAM_NAME, FISCAL_YEAR);


DROP TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAM_EXCEPTIONS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAM_EXCEPTIONS
(
  AUDIT_ID               INTEGER,
  PROGRAM_NAME           VARCHAR2(50 BYTE),
  PROGRAM_ID   		 INTEGER 
  FISCAL_YEAR            VARCHAR2(8 BYTE),
  EXCEPTION_TYPE         VARCHAR2(100 BYTE),
  TOTAL_FTE_ADJUSTMENTS  NUMBER(16,6),
  ADJUSTMENT_REQUIRED    VARCHAR2(1 BYTE),
  ADJUSTMENT_STATUS      VARCHAR2(100 BYTE),
  LAST_ADJUSTMENT_DATE   DATE,
  COMMENTS               VARCHAR2(1000 BYTE)
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19)    NOT NULL, 
  VERSION                       NUMBER(19)
);


CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_PROGRAM_EXCEPTIONS_PK ON STATE_EQUAL_OWNER.AUDIT_PROGRAM_EXCEPTIONS 
(AUDIT_ID, PROGRAM_NAME, FISCAL_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.AUDIT_PROGRAM_EXCEPTIONS ADD (
  PRIMARY KEY
  (AUDIT_ID, PROGRAM_NAME, FISCAL_YEAR);





DROP TABLE STATE_EQUAL_OWNER.AUDIT_REPAYMENT CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_REPAYMENT
(
  DISTRICT_NUMBER     VARCHAR2(4 BYTE),
  BEGIN_FISCAL_YEAR   VARCHAR2(4 BYTE),
  END_FISCAL_YEAR     VARCHAR2(4 BYTE),
  BEGIN_FISCAL_MONTH  VARCHAR2(15 BYTE),
  END_FISCAL_MONTH    VARCHAR2(15 BYTE),
  FREQUENCY           VARCHAR2(30 BYTE),
  PAYMENT_AMOUNT      NUMBER(16,6),
  AUDIT_ID            INTEGER,
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19),
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_REPAYMENT_PK ON STATE_EQUAL_OWNER.AUDIT_REPAYMENT
(ID);
CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_REPAYMENT_UNIQUE ON STATE_EQUAL_OWNER.AUDIT_REPAYMENT
(BEGIN_FISCAL_YEAR, END_FISCAL_YEAR, BEGIN_FISCAL_MONTH, END_FISCAL_MONTH, DISTRICT_NUMBER);


DROP TABLE STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS
(
  AUDIT_ID                   INTEGER,
  FISCAL_YEAR                VARCHAR2(8 BYTE),
  SASID                      VARCHAR2(8 BYTE),
  STUD_OCT_DISTRICT          VARCHAR2(6 BYTE),
  STUD_OCT_SCHOOL            VARCHAR2(5 BYTE),
  STUDENT_LAST_NAME          VARCHAR2(60 BYTE),
  STUDENT_FIRST_NAME         VARCHAR2(60 BYTE),
  STUDENT_MIDDLE_INITIAL     VARCHAR2(1 BYTE),
  STUDENT_GRADE_LEVEL        VARCHAR2(2 BYTE),
  STUD_OCT_FUNDING_CODE      VARCHAR2(3 BYTE),
  STUD_OCT_FREE_LUNCH        VARCHAR2(2 BYTE),
  ATTENDANCE_CODE            VARCHAR2(3 BYTE),
  PARENT_DISTRICT_RESIDENCE  VARCHAR2(6 BYTE),
  SASID_EXCEPTION            VARCHAR2(150 BYTE),
  ADJUSTED_FUNDING_CODE      VARCHAR2(3 BYTE),
  ADJUSTED_FREE_LUNCH        VARCHAR2(2 BYTE),
  POST_SECONDARY             VARCHAR2(2 BYTE),
  PUPIL_EXCEPTION            VARCHAR2(100 BYTE),
  AT_RISK_EXCEPTION          VARCHAR2(100 BYTE),
  NEW_FTE                    NUMBER
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19),
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS_PK ON STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS
(FISCAL_YEAR, SASID);



ALTER TABLE STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS ADD (
  CONSTRAINT AUDIT_SASID_EXCEPTIONS_PK
  PRIMARY KEY
  (FISCAL_YEAR, SASID)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_SASID_EXCEPTIONS_PK
  ENABLE VALIDATE);

DROP TABLE STATE_EQUAL_OWNER.AUDIT_TRACKING CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_TRACKING
(
  AUDIT_ID                      INTEGER,
  ORGANIZATION_CODE             VARCHAR2(6 BYTE),
  AUDIT_STATUS                  VARCHAR2(40 BYTE),
  STATUS_DATE                   DATE,
  PRIMARY_AUDITOR_ID            VARCHAR2(20 BYTE),
  SECONDARY_AUDITOR_ID          VARCHAR2(20 BYTE),
  PROGRESS                      VARCHAR2(100 BYTE),
  AUDIT_FREQUENCY               VARCHAR2(10 BYTE),
  ALERT                         VARCHAR2(200 BYTE),
  FISCAL_YEAR_1                 VARCHAR2(8 BYTE),
  FISCAL_YEAR_2                 VARCHAR2(8 BYTE),
  FISCAL_YEAR_3                 VARCHAR2(8 BYTE),
  FISCAL_YEAR_4                 VARCHAR2(8 BYTE),
  FISCAL_YEAR_5                 VARCHAR2(8 BYTE),
  AUDIT_CREATED                 DATE,
  AUDIT_TYPE                    VARCHAR2(30 BYTE),
  SUPERVISOR_COMMENTS           VARCHAR2(4000 BYTE),
  PRIMARY_AUDITOR_COMMENTS      VARCHAR2(4000 BYTE),
  REPORT_FINALIZED              DATE,
  TOTAL_AUDIT_LIABILITY         NUMBER(16,6),
  DISTRICT_ENGAGED              DATE,
  FIELD_WORK_STARTED            DATE,
  INITIAL_FIELD_WORK_COMPLETED  DATE,
  DRAFT_REPORT_COMPLETED        DATE,
  DRAFT_REPORT_ISSUED           DATE,
  REPORT_APPEALED               DATE,
  AUDIT_CLOSED                  DATE,
  AUDIT_REOPENED                DATE,
  AUDIT_REFINALIZED             DATE,
  RECLOSED_AFTER_APPEAL         DATE,
  REVIEWED_BY                   VARCHAR2(150 BYTE),
  FINALIZED_BY                  VARCHAR2(150 BYTE),
  SECONDARY_AUDITOR_COMMENTS    VARCHAR2(4000 BYTE),
  SUPERVISOR                    VARCHAR2(100 BYTE),
  AUDIT_ASSIGNED                DATE,
  DOCUMENTS_RECEIVED            DATE,
  REPORT_REVISED                DATE,
  AUDIT_RECLOSED                DATE
  UPDATE_TIMESTAMP      	DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19),
  VERSION                       NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_TRACKING_PK ON STATE_EQUAL_OWNER.AUDIT_TRACKING
(AUDIT_ID, FISCAL_YEAR_1, AUDIT_STATUS);


ALTER TABLE STATE_EQUAL_OWNER.AUDIT_TRACKING ADD (
  CONSTRAINT AUDIT_TRACKING_PK
  PRIMARY KEY
  (AUDIT_ID, FISCAL_YEAR_1, AUDIT_STATUS)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_TRACKING_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.AUDIT_TRAN CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.AUDIT_TRAN
(
  DISTRICT_NUMBER  VARCHAR2(6 BYTE),
  DATE_CHANGED     DATE,
  CHANGE_TYPE      VARCHAR2(2 BYTE),
  PUPIL_TRAN       NUMBER,
  OPER_TRAN        NUMBER(16,6),
  IND_CONT         NUMBER,
  CAP_OUT_TRAN     NUMBER(16,6),
  MIG_MILES        NUMBER(16,1),
  REG_D_MILES      NUMBER(16,1),
  SCHOOL_DAYS      NUMBER,
  REG_MILES        NUMBER,
  BOARD_TRAN       NUMBER,
  EX_REIM          NUMBER(16,6),
  DESEG_REIM       NUMBER(16,6),
  REIM_TRAN        NUMBER(16,6),
  REIM_TRAN_LY     NUMBER(16,6),
  ADV_PAY_LY       NUMBER(16,6),
  REIM_ADV_PAY     NUMBER(16,6),
  ADV_PAY          NUMBER(16,6),
  ACT_MILES        NUMBER(16,1),
  TOTAL_MILES      NUMBER(16,1),
  FISCAL_YEAR      VARCHAR2(8 BYTE),
  AUDIT_ID         INTEGER,
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19),
  VERSION                       NUMBER(19
);



CREATE UNIQUE INDEX STATE_EQUAL_OWNER.AUDIT_TRAN_PK ON STATE_EQUAL_OWNER.AUDIT_TRAN
(DISTRICT_NUMBER, FISCAL_YEAR, AUDIT_ID);

ALTER TABLE STATE_EQUAL_OWNER.AUDIT_TRAN ADD (
  CONSTRAINT AUDIT_TRAN_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, AUDIT_ID)
  USING INDEX STATE_EQUAL_OWNER.AUDIT_TRAN_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.CAPITAL_OUTLAY CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.CAPITAL_OUTLAY
(
  DISTRICT_NUMBER               VARCHAR2(6 BYTE),
  FISCAL_YEAR                   VARCHAR2(8 BYTE),
  TOTAL_PURCHASE_PRICE          NUMBER(16,6),
  DEPRECIATION_CYCLE            NUMBER(16,6),
  PREV_DEPRECIATED_AMT          NUMBER(16,6),
  REMAINING_AMT                 NUMBER(16,6),
  DEPRECIATION_PY               NUMBER(16,6),
  CONTRACTOR_MILES              NUMBER(16,6),
  OUTLAY_EXCLUSION              NUMBER(16,6),
  CAPITAL_OUTLAY_TOTAL_FUNDING  NUMBER(16,6),
  BASE_YEAR                     NUMBER,
  RELATED_YEAR                  NUMBER, -- One of the ten years related to the main fiscal year
  UPDATE_TIMESTAMP      	DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		VARCHAR2(100 BYTE)        NOT NULL,
  ID                            NUMBER(19),
  VERSION                       NUMBER(19)
);


 CREATE UNIQUE INDEX STATE_EQUAL_OWNER.CAPITAL_OUTLAY_PK ON STATE_EQUAL_OWNER.CAPITAL_OUTLAY
(DISTRICT_NUMBER, FISCAL_YEAR, RELATED_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.CAPITAL_OUTLAY ADD (
  CONSTRAINT CAPITAL_OUTLAY_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, RELATED_YEAR)
  USING INDEX STATE_EQUAL_OWNER.CAPITAL_OUTLAY_PK
  ENABLE VALIDATE);



DROP TABLE STATE_EQUAL_OWNER.COMMENT_INFO CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.COMMENT_INFO
(
  ID            NUMBER(19)                      NOT NULL,
  ACTIVE        VARCHAR2(20 CHAR),
  ENTERED_BY    VARCHAR2(250 CHAR),
  ENTERED_DATE  DATE,
  NOTE          VARCHAR2(4000 CHAR),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  VERSION       NUMBER(19)
);

DROP TABLE STATE_EQUAL_OWNER.CSI CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.CSI
(
  DISTRICT_NUMBER     VARCHAR2(4 BYTE),
  CSI_NUMBER          VARCHAR2(4 BYTE),
  DATE_CHANGED        VARCHAR2(8 BYTE),
  CHANGE_TYPE         VARCHAR2(2 BYTE),
  CSI_K_12_FTE_CNT    NUMBER(16,6),
  CSI_SUPPLEMENTAL_K  NUMBER(16,6),
  CSI_ONLINE_CNT      NUMBER(16,6),
  CSI_FL_1_8_CNT      NUMBER(16,6),
  CSI_FL_K_12_CNT     NUMBER(16,6),
  CSI_MEM_1_8_CNT     NUMBER(16,6),
  CSI_MEM_K_12_CNT    NUMBER(16,6),
  CSI_CPP_CNT         NUMBER(16,6),
  CSI_KIND_FTE_CNT    NUMBER(16,6),
  FISCAL_YEAR         VARCHAR2(8 BYTE),
  CSI_ASCENT_CNT      NUMBER(16,6),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                  NUMBER(19),
  VERSION             NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.CSI_PK ON STATE_EQUAL_OWNER.CSI
(DISTRICT_NUMBER, CSI_NUMBER, FISCAL_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.CSI ADD (
  CONSTRAINT CSI_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, CSI_NUMBER, FISCAL_YEAR)
  USING INDEX STATE_EQUAL_OWNER.CSI_PK
  ENABLE VALIDATE);

DROP TABLE STATE_EQUAL_OWNER.ELECTIONS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.ELECTIONS
(
  CREATE TABLE STATE_EQUAL.ELECTIONS
(
  DISTRICT_NUMBER                 VARCHAR2(4 BYTE),
  FISCAL_YEAR                     VARCHAR2(8 BYTE),
  NO_ELECTION                     VARCHAR2(3 BYTE),
  VOTE_FOR                        INTEGER,
  VOTE_AGAINST                	  INTEGER,
  CATEGORY_AMOUNT                 NUMBER(16,6),
  CATEGORY                        VARCHAR2(40 BYTE),
  BALLOT_LANGUAGE                VARCHAR2(4000 BYTE),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                             NUMBER(19),
  VERSION                        NUMBER(19)
);

DROP TABLE STATE_EQUAL_OWNER.FREE_LUNCH CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.FREE_LUNCH
(
  DISTRICT_NUMBER  VARCHAR2(6 BYTE),
  FISCAL_YEAR      VARCHAR2(8 BYTE),
  DATE_CHANGE      VARCHAR2(8 BYTE),
  CHANGE_TYPE      VARCHAR2(2 BYTE),
  LUNCH_F          NUMBER(16,6),
  GRADE_LEVEL      VARCHAR2(18),
  -- LUNCH_F_TOT      NUMBER(16,6), -- Goes to the totals table
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID               NUMBER(19),
  VERSION          NUMBER(19)
);


CREATE UNIQUE INDEX STATE_EQUAL_OWNER.FREE_LUNCH_PK ON STATE_EQUAL_OWNER.FREE_LUNCH
(DISTRICT_NUMBER, FISCAL_YEAR, MONTH_NOS);

ALTER TABLE STATE_EQUAL_OWNER.FREE_LUNCH ADD (
  CONSTRAINT FREE_LUNCH_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, MONTH_NOS)
  USING INDEX STATE_EQUAL_OWNER.FREE_LUNCH_PK
  ENABLE VALIDATE);



DROP TABLE STATE_EQUAL_OWNER.FTE_BY_GRADE CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.FTE_BY_GRADE
(
  DISTRICT_NUMBER   VARCHAR2(6 BYTE),
  FISCAL_YEAR       VARCHAR2(8 BYTE),
  DATE_CHANGED     DATE,
  CHANGE_TYPE       VARCHAR2(2 BYTE),
  CDE_MEMBER      NUMBER(16,6),
  MEMBER          NUMBER(16,6),
  PARTTIME_H      NUMBER(16,6),
  PARTTIME_F      NUMBER(16,6),
  FTE_NOT_ELIG    NUMBER(16,6),
  FTE_ELIG        NUMBER(16,6),
  FUNDED_COUNT    NUMBER(16,6),
  OUT_OF_DIST    NUMBER(16,6),
  GRADE_LEVEL       VARCHAR2(8 BYTE), -- New field, identifies the grade for which the
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                NUMBER(19),
  VERSION           NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.FTE_BY_GRADE_PK ON STATE_EQUAL_OWNER.FTE_BY_GRADE
(DISTRICT_NUMBER, FISCAL_YEAR, GRADE_LEVEL);

ALTER TABLE STATE_EQUAL_OWNER.FTE_BY_GRADE ADD (
  CONSTRAINT FTE_BY_GRADE_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, GRADE_LEVEL)
  USING INDEX STATE_EQUAL_OWNER.FTE_BY_GRADE_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS CASCADE CONSTRAINTS;

-- New table to store different totals.
CREATE TABLE STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS
(
  DISTRICT_NUMBER   VARCHAR2(6 BYTE) NOT NULL,
  FISCAL_YEAR       VARCHAR2(8 BYTE) NOT NULL,
  ADDITIONAL_CRITERIA 	VARCHAR2(250),  -- Optional criteria which can be used to identify the data eg Audit_Id for which the total is
  TOTAL_NAME        VARCHAR2(24)  NOT NULL,
  TOTAL_TYPE	    VARCHAR2(12),
  TOTAL_VALUE       NUMBER(18,8),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                NUMBER(19),
  VERSION           NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS_PK ON STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS
(DISTRICT_NUMBER, FISCAL_YEAR, TOTAL_NAME);

ALTER TABLE STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS ADD (
  CONSTRAINT STATE_EQUAL_TOTALS_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, FISCAL_YEAR, TOTAL_NAME)
  USING INDEX STATE_EQUAL_OWNER.STATE_EQUAL_TOTALS_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.MILL_LEVY CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.MILL_LEVY
(
  GROSS_ASSESSED_VALUATION        NUMBER(16,6),
  TAX_INCREMENT_FINANCING         NUMBER(16,6),
  NET_ASSESSED_VALUATION          NUMBER(16,6),
  HOLD_HARMLESS                   NUMBER(16,6),
  EXCESS_HOLD_HARMLESS            NUMBER(16,6),
  VOTER_APPROVED_OVERRIDE         NUMBER(16,6),
  TRANSPORTATION                  NUMBER(16,6),
  BOND                            NUMBER(16,6),
  SPECIAL_BUILDING_AND_TECH       NUMBER(16,6),
  ABATEMENT                       NUMBER(16,6),
  FULL_DAY_KINDERGARTEN           NUMBER(16,6),
  OTHER                           NUMBER(16,6),
  CALCULATED_TP_MILL_LEVY         NUMBER(16,6),
  CERTIFIED_TP_MILL_LEVY          NUMBER(16,6),
  CALCULATED_CATBUY_MILL_LEVY     NUMBER(16,6),
  CERTIFIED_CATBUY_MILL_LEVY      NUMBER(16,6),
  CALCULATED_HH_MILL_LEVY         NUMBER(16,6),
  CERTIFIED_HH_MILL_LEVY          NUMBER(16,6),
  CALCULATED_EHH_MILL_LEVY        NUMBER(16,6),
  CERTIFIED_EHH_MILL_LEVY         NUMBER(16,6),
  CALCULATED_OVERRIDE_MILL_LEVY   NUMBER(16,6),
  CERTIFIED_OVERRIDE_MILL_LEVY    NUMBER(16,6),
  CALCULATED_TRANSPORT_MILL_LEVY  NUMBER(16,6),
  CERTIFIED_TRANSPORT_MILL_LEVY   NUMBER(16,6),
  CERTIFIED_BOND_MILL_LEVY        NUMBER(16,6),
  CALCULATED_SBT_MILL_LEVY        NUMBER(16,6),
  CERTIFIED_SBT_MILL_LEVY         NUMBER(16,6),
  CALCULATED_ABATE_MILL_LEVY      NUMBER(16,6),
  CERTIFIED_ABATE_MILL_LEVY       NUMBER(16,6),
  CALCULATED_FDK_MILL_LEVY        NUMBER(16,6),
  CERTIFIED_FDK_MILL_LEVY         NUMBER(16,6),
  CERTIFIED_OTHER_MILL_LEVY       NUMBER(16,6),
  TOTAL_ALL_CERTIFIED_MILLS       NUMBER(16,6),
  FULL_FUNDING_MILL_LEVY          NUMBER(16,6),
  TABOR_MILL_LEVY                 NUMBER(16,6),
  SOT_ADJ_PERCENT                 NUMBER(16,6),
  COST_OF_LIVING                  NUMBER(16,6),
  FISCAL_YEAR                     VARCHAR2(8 BYTE),
  DISTRICT_NUMBER                 VARCHAR2(6 BYTE),
  UPDATE_TIMESTAMP      	  DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              		  VARCHAR2(100 BYTE)        NOT NULL,
  ID                              NUMBER(19),
  VERSION                         NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.MILL_LEVY_PK ON STATE_EQUAL_OWNER.MILL_LEVY
(FISCAL_YEAR, DISTRICT_NUMBER);


ALTER TABLE STATE_EQUAL_OWNER.MILL_LEVY ADD (
  CONSTRAINT MILL_LEVY_PK
  PRIMARY KEY
  (FISCAL_YEAR, DISTRICT_NUMBER)
  USING INDEX STATE_EQUAL_OWNER.MILL_LEVY_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.ORGANIZATIONS CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.ORGANIZATIONS
(
  ORGANIZATION_CODE  VARCHAR2(6 BYTE),
  ORGANIZATION_TYPE  VARCHAR2(30 BYTE),
  ORGANIZATION_NAME  VARCHAR2(150 BYTE),
  COUNTY_CODE        VARCHAR2(2 BYTE),
  COUNTY_NAME        VARCHAR2(300 BYTE),
  REGION             VARCHAR2(30 BYTE),
  ORGANIZATION_SIZE  VARCHAR2(60 BYTE),
  AUDIT_FREQUENCY    VARCHAR2(10 BYTE),
  DATE_UPDATED       DATE,
  AUDITOR_COMMENT    VARCHAR2(2000 BYTE),
  FISCAL_YEAR        VARCHAR2(8 BYTE),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                 NUMBER(19),
  VERSION            NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.ORGANIZATIONS_PK ON STATE_EQUAL_OWNER.ORGANIZATIONS
(ORGANIZATION_CODE, ORGANIZATION_TYPE, FISCAL_YEAR);


ALTER TABLE STATE_EQUAL_OWNER.ORGANIZATIONS ADD (
  CONSTRAINT ORGANIZATIONS_PK
  PRIMARY KEY
  (ORGANIZATION_CODE, ORGANIZATION_TYPE, FISCAL_YEAR)
  USING INDEX STATE_EQUAL_OWNER.ORGANIZATIONS_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.PRORATE CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.PRORATE
(
  FISCAL_YEAR                 VARCHAR2(10 BYTE),
  FUNDING_SOURCES             VARCHAR2(250 BYTE),
  PRORATE_FACTOR_1ST_PAYMENT  NUMBER(19,6),
  PRORATE_FACTOR_2ND_PAYMENT  NUMBER(19,6),
  TOTAL_DISTRIBUTION          NUMBER(19,2),
  TOTAL_FIRST_PAYMENT         NUMBER(19,2),
  TOTAL_SECOND_PAYMENT        NUMBER(19,2),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                          NUMBER(19),
  VERSION                     NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.PRORATE_PK ON STATE_EQUAL_OWNER.PRORATE
(FISCAL_YEAR);

ALTER TABLE STATE_EQUAL_OWNER.PRORATE ADD (
  CONSTRAINT PRORATE_PK
  PRIMARY KEY
  (FISCAL_YEAR)
  USING INDEX STATE_EQUAL_OWNER.PRORATE_PK
  ENABLE VALIDATE);

DROP TABLE STATE_EQUAL.PUPIL_COUNT_EXCEPTIONS_TYPES CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL.PUPIL_COUNT_EXCEPTIONS_TYPES
(
  EXCPETION_ID        NUMBER,
  EXCEPTION_CATEGORY  VARCHAR2(20 BYTE),
  SHORT_DESCRIPTION   VARCHAR2(100 BYTE),
  LONG_DESCRIPTION    VARCHAR2(1000 BYTE)
);

DROP TABLE STATE_EQUAL_OWNER.SE_MONTHLY CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.SE_MONTHLY
(
  DISTRICT_NUMBER        VARCHAR2(6 BYTE),
  DATE_CHANGED           DATE,
  FPC                    NUMBER(16,6),
  LUNCH_1_8          	 NUMBER(16,6),
  LUNCH_K_12         	 NUMBER(16,6),
  SPEC_OWN_TAX       	NUMBER(16,6),
  ASSESSED_VAL       	NUMBER(16,6),
  TOTAL_CATS         	NUMBER(16,6),
  TOT_FUND_TP3       	NUMBER(16,6),
  STATE_EQUAL    	NUMBER(16,6),
  MILL_LEVY          	NUMBER(16,6),
  CAT_ML_LEVY        	NUMBER(16,6),
  ENTITLE         	NUMBER(16,6),
  DEC_ACT_ENTITLE       NUMBER(16,6),
  JUN_ACT_ENTITLE       NUMBER(16,6),
  OODS_ADJ        	NUMBER(16,6),
  SWAP_ADJ        	NUMBER(16,6),
  OTHER_ADJ       	NUMBER(16,6),
  PAYMENT            	NUMBER(16,6),
  VARIANCE_1         	NUMBER(16,6),
  VARIANCE_2         	NUMBER(16,6),
  VARIANCE_3         	NUMBER(16,6),
  CHRT_ADJ        	NUMBER(16,6),
  CSI_ADMIN       	NUMBER(16,6),
  AUDIT_ADJ       	NUMBER(16,6),
  FISCAL_YEAR            VARCHAR2(8 BYTE),
  MONTH                  VARCHAR2(18 BYTE), - New field to identify for which month the data belongs
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                     NUMBER(19),
  VERSION                NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.SE_MONTHLY_PK ON STATE_EQUAL_OWNER.SE_MONTHLY 
(FISCAL_YEAR, DISTRICT_NUMBER, MONTH);

ALTER TABLE STATE_EQUAL_OWNER.SE_MONTHLY ADD (
  CONSTRAINT SE_MONTHLY_PK
  PRIMARY KEY
  (FISCAL_YEAR, DISTRICT_NUMBER, MONTH)
  USING INDEX STATE_EQUAL_OWNER.SE_MONTHLY_PK
  ENABLE VALIDATE);



DROP TABLE STATE_EQUAL_OWNER.STATE_EQUAL CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.STATE_EQUAL -- We would really like to move the variables from here to the variables table 
(
  DISTRICT_NUMBER                VARCHAR2(6 BYTE),
  DATE_CHANGED                   DATE,
  SPECED_PK                      NUMBER,
  FUNDED_PUPIL_COUNT             NUMBER,
  CAT_TRANSPORTATION             NUMBER(16,6),
  CAT_VOCED                      NUMBER(16,6),
  CAT_ELPA                       NUMBER(16,6),
  CAT_SPED_DISABILITIES          NUMBER(16,6),
  CAT_SPED_GIFTED_TALENTED       NUMBER(16,6),
  SIZE_FACTOR                    NUMBER(16,6),
  COST_OF_LIVING_FACTOR          NUMBER(16,6),
  PERSONNEL_COST_FACTOR          NUMBER(16,6),
  FORMULA_TP_WO_AT_RISK          NUMBER(16,6),
  FREE_LUNCH_1_8                 NUMBER(16,6),
  FREE_LUNCH_K_12                NUMBER(16,6),
  MEMBER_1_8                     NUMBER(16,6),
  TOTAL_PROGRAM_AT_RISK          NUMBER(16,6),
  GRAND_TOTAL_PROGRAM            NUMBER(16,6),
  SOT_GROSS                      NUMBER(16,6),
  PROPERTY_TAX                   NUMBER(16,6),
  STATE_EQUAL                    NUMBER(16,6),
  CERT_TOTAL_PROGRAM_MILL_LEVY   NUMBER(16,6),
  MONTH_ENTITLE                  NUMBER(16,6),
  YTD_ENTITLE                    NUMBER(16,6),
  ADJ_OTHER                      NUMBER(16,6),
  YTD_OTHER                      NUMBER(16,6),
  ADJ_SWAP                       NUMBER(16,6),
  YTD_SWAP                       NUMBER(16,6),
  ALLOW_SPEND                    NUMBER(16,6),
  TOTAL_PROGRAM_TABOR            NUMBER(16,6),
  TOTAL_FUND_INCLUDING_ONLINE    NUMBER(16,6),
  TOTAL_MAX_FUND                 NUMBER(16,6),
  TOTAL_ADD_FUND                 NUMBER(16,6),
  MEMBER_K_12                    NUMBER(16,6),
  FUNDED_AT_RISK_COUNT           NUMBER(16,6),
  FORMULA_PUPIL_FUND             NUMBER(16,6),
  TOTAL_AT_RISK_FUNDING          NUMBER(16,6),
  CSI_ADMIN_MONTH                NUMBER(16,6),
  FTE                            NUMBER(16,6),
  MINIMUM_FORMULA_FUND           NUMBER(16,6),
  DISTRICT_CERT_TOTAL_ADD_FUND   NUMBER(16,6),
  SOT_NET                        NUMBER(16,6),
  CHARTER_SCHOOL_FPC             NUMBER(16,6),
  SMALL_CENTER_PAYMENTS          NUMBER(16,6),
  ESL_CSAP                       NUMBER(16,6),
  MULTI_DISTRICT_ONLINE_FTE      NUMBER(16,6),
  SINGLE_DISTRICT_ONLINE_FTE     NUMBER(16,6),
  CPP                            NUMBER(16,6),
  CHARTER_DEBT_MONTH             NUMBER(16,6),
  CHARTER_DEBT_YTD               NUMBER(16,6),
  CSI_ADMIN_YTD                  NUMBER(16,6),
  MONTH_PAYMENT                  NUMBER(16,6),
  YTD_PAYMENT                    NUMBER(16,6),
  MONTH_AUDIT_REPAY              NUMBER(16,6),
  CSI_TOTAL_PROGRAM_FUND         NUMBER(16,6),
  YTD_AUDIT_REPAY                NUMBER(16,6),
  NEG_FACTOR                     NUMBER(16,6),
  FISCAL_YEAR                    VARCHAR2(8 BYTE),
  ASSESSED_VAL                   NUMBER(16,6),
  CALC_TOTAL_PROGRAM_MILL_LEVY   NUMBER(16,6),
  STATE_EQUAL_ADJUST             NUMBER(16,6),
  STATE_AVERAGE_AT_RISK_PERCENT  NUMBER(16,6),
  MINIMUM_STATE_AID              NUMBER(16,6),
  BASE_PER_PUPIL_FUND            NUMBER(16,6),
  ONLINE_PER_PUPIL_FUND          NUMBER(16,6),
  NEG_FACTOR_ONLINE_PPF          NUMBER(16,6),
  AT_RISK_BASE_FACTOR            NUMBER(16,6),
  TOTAL_ONLINE_AND_ASCENT_FUND   NUMBER(16,6),
  ADJ_DISTRICT_TOTAL_PROGRAM     NUMBER(16,6),
  FULL_FUNDING_MILL              NUMBER(16,6),
  TABOR_MILL                     NUMBER(16,6),
  SOT_ADJ_PERCENT                NUMBER(16,6),
  DISTRICT_CHARTER_FTE_COUNT     NUMBER(16,6),
  CALC_CAT_BUY_MILL_LEVY         NUMBER(16,6),
  CERT_CAT_BUY_MILL_LEVY         NUMBER(16,6),
  TOTAL_PROGRAM_CAT_BUYOUT       NUMBER(16,6),
  ADJ_OODS                       NUMBER(16,6),
  CAT_LEVY_ADJ                   NUMBER(16,6),
  MILL_LEVY_ADJ                  NUMBER(16,6),
  YTD_OODS                       NUMBER(16,6),
  PER_PUPIL_OPERATING_REVENUE    NUMBER(16,6),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID                     NUMBER(19),
  VERSION                NUMBER(19)
);


CREATE UNIQUE INDEX STATE_EQUAL_OWNER.STATE_EQUAL_PK ON STATE_EQUAL_OWNER.STATE_EQUAL
(FISCAL_YEAR, DISTRICT_NUMBER);

ALTER TABLE STATE_EQUAL_OWNER.STATE_EQUAL ADD (
  CONSTRAINT STATE_EQUAL_PK
  PRIMARY KEY
  (FISCAL_YEAR, DISTRICT_NUMBER)
  USING INDEX STATE_EQUAL_OWNER.STATE_EQUAL_PK
  ENABLE VALIDATE);


DROP TABLE STATE_EQUAL_OWNER.STATE_EQUAL_MASTER CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.STATE_EQUAL_MASTER
(
  VERSION        	NUMBER,
  ID             	NUMBER,
  ELEMENT_NAME   	VARCHAR2(100 BYTE),
  ELEMENT_VALUE  	VARCHAR2(400 BYTE),
  GROUP_NAME     	VARCHAR2(100 BYTE),
  ADDITIONAL_CRITERIA 	VARCHAR2(400 BYTE),
  ACTIVE         	VARCHAR2(1 BYTE),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL
);

DROP TABLE STATE_EQUAL_OWNER.TRANSPORTATION CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.TRANSPORTATION
(
  DISTRICT_NUMBER          VARCHAR2(6 BYTE),
  DATE_CHANGED             DATE,
  ERRORS                   VARCHAR2(12 BYTE),
  PUPIL_TRAN               NUMBER,
  OPER_TRAN                NUMBER,
  IND_CONT                 NUMBER,
  CAP_OUT_TRAN             NUMBER,  
  MIG_MILES                NUMBER,
  REG_D_MILES              NUMBER,
  SCHOOL_DAYS              NUMBER,
  REG_DAYS                 NUMBER,
  BOARD_TRAN               NUMBER,
  EX_REIM                  NUMBER,
  DESEG_REIM               NUMBER,
  REIM_TRAN                NUMBER,
  REIM_TRAN_LY             NUMBER,
  ADV_PAY_LY               NUMBER,
  REIM_ADV_PAY             NUMBER,
  ADV_PAY                  NUMBER,
  ACT_MILES                NUMBER,
  TOTAL_MILES              NUMBER,
  FISCAL_YEAR              VARCHAR2(8 BYTE),
  CDE_COMMENTS             VARCHAR2(4000 BYTE),
  FIRST_PAYMENT            NUMBER,
  SECOND_PAYMENT           NUMBER,
  DISTRICT_DISTRIBUTION    NUMBER,
  COFRS_BATCH_NUMBER       NUMBER,
  COFRS_DATE_PAID          DATE,
  NAME_PREPARER_CDE40      VARCHAR2(100 BYTE),
  PHONE_PREPARER_CDE40     VARCHAR2(15 BYTE),
  EMAIL_PREPARER_CDE40     VARCHAR2(100 BYTE),
  FEES_COLLECTED           NUMBER,
  OTHER_REVENUE            NUMBER,
  NET_CURRENT_OPER_EXPEND  NUMBER,
  TOTAL_REIM_MILEAGE       NUMBER,
  MILEAGE_ENTITLEMENT      NUMBER,
  EX_COSTS                 NUMBER,
  MAX_REIM_ENTITLEMENT     NUMBER,
  REIM_ENTITLEMENT         NUMBER,
  TOTAL_REIM_ENTITLEMENT   NUMBER,
  FINAL_REIM_ENTITLEMENT   NUMBER,
  FINAL_REIM_PRORATED      NUMBER,
  CDE40_COMPLETE_FLAG      VARCHAR2(4),
  CDE40_APPROVED_FLAG      VARCHAR2(4),
  UPDATE_TIMESTAMP         DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	   VARCHAR2(100 BYTE)        NOT NULL,
  ID                       NUMBER(19),
  VERSION                  NUMBER(19)
);


DROP TABLE STATE_EQUAL_OWNER.VARIABLES CASCADE CONSTRAINTS;

CREATE TABLE STATE_EQUAL_OWNER.VARIABLES
(
  DISTRICT_NUMBER       VARCHAR2(6 BYTE) NOT NULL,    
  FISCAL_YEAR   	VARCHAR2(8 BYTE),
  MONTH         	VARCHAR2(18),
  ADDITIONAL_CRITERIA 	VARCHAR2(250),                
  NAME     		VARCHAR2(50 CHAR),
  VALUE    		NUMBER(18,8),
  ACTIVE   		VARCHAR2(10 CHAR),
  UPDATE_TIMESTAMP      DATE                      DEFAULT SYSTIMESTAMP NOT NULL,
  USER_ID              	VARCHAR2(100 BYTE)        NOT NULL,
  ID       		NUMBER(19)    NOT NULL,
  VERSION  		NUMBER(19)
);

CREATE UNIQUE INDEX STATE_EQUAL_OWNER.VARIABLES_PK ON STATE_EQUAL_OWNER.VARIABLES
(DISTRICT_NUMBER, NAME, FISCAL_YEAR);


ALTER TABLE STATE_EQUAL_OWNER.VARIABLES ADD (
  CONSTRAINT VARIABLES_PK
  PRIMARY KEY
  (DISTRICT_NUMBER, NAME, FISCAL_YEAR)
  USING INDEX STATE_EQUAL_OWNER.VARIABLES_PK
  ENABLE VALIDATE);


DROP SYNONYM STATE_EQUAL_WEB.AUDIT_EQUAL;

CREATE OR REPLACE SYNONYM STATE_EQUAL_WEB.AUDIT_EQUAL FOR STATE_EQUAL_OWNER.AUDIT_EQUAL;


DROP SYNONYM STATE_EQUAL_WEB.PRORATE;

CREATE OR REPLACE SYNONYM STATE_EQUAL_WEB.PRORATE FOR STATE_EQUAL_OWNER.PRORATE;


DROP SYNONYM STATE_EQUAL_WEB.SE_MONTHLY;

CREATE OR REPLACE SYNONYM STATE_EQUAL_WEB.SE_MONTHLY FOR STATE_EQUAL_OWNER.SE_MONTHLY;


DROP SYNONYM STATE_EQUAL_WEB.STATE_EQUAL;

CREATE OR REPLACE SYNONYM STATE_EQUAL_WEB.STATE_EQUAL FOR STATE_EQUAL_OWNER.STATE_EQUAL;


DROP SYNONYM STATE_EQUAL_WEB.TRANSPORTATION;

CREATE OR REPLACE SYNONYM STATE_EQUAL_WEB.TRANSPORTATION FOR STATE_EQUAL_OWNER.TRANSPORTATION;




GRANT SELECT ON STATE_EQUAL_OWNER.HIBERNATE_SEQUENCE TO STATE_EQUAL_WEB;


GRANT DELETE, INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.AUDITORS TO STATE_EQUAL_WEB;

GRANT DELETE, INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.AUDIT_CONTACTS TO STATE_EQUAL_WEB;

GRANT DELETE, INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.AUDIT_CSI TO STATE_EQUAL_WEB;

GRANT DELETE, INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.AUDIT_EQUAL TO STATE_EQUAL_WEB;

GRANT DELETE, INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.AUDIT_FREE_LUNCH TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.CAPITAL_OUTLAY TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.COMMENT_INFO TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.CSI TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.ELECTIONS TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.FREE_LUNCH TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.FTE_BY_GRADE TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.MILL_LEVY TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.PRORATE TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.SE_MONTHLY TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.STATE_EQUAL TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.STATE_EQUAL_MASTER TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.TRANSPORTATION TO STATE_EQUAL_WEB;

GRANT INSERT, SELECT, UPDATE ON STATE_EQUAL_OWNER.VARIABLE TO STATE_EQUAL_WEB;
