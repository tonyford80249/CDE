/*
 * Copyright ResQSoft, Inc. 2011
 */
package com.cdoe.ui;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.Validator;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.cdoe.biz.model.Transportation;
import com.cdoe.services.ICde40SummaryManager;
import com.cdoe.ui.form.TransportationForm;
import com.resqsoft.util.RequestUtils;

@Controller
@RequestMapping("/secure/Cde40Summary")
public class Cde40SummaryController {

	private static final Logger logger = Logger
			.getLogger(Cde40SummaryController.class);

	@Autowired
	private ICde40SummaryManager cde40SummaryManager;

	@Autowired
	private Validator transportationValidator;

	@RequestMapping(method = RequestMethod.GET)
	public String index(Model model, HttpServletRequest request) {
		HttpSession session = request.getSession();
		String fiscalYear =  (String) session.getAttribute("fiscalYear");
		TransportationForm form = cde40SummaryManager.setupForm(fiscalYear);
		model.addAttribute("transportationForm", form);
		return ".Cde40Summary-index";
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public String save(Model model,
			@ModelAttribute TransportationForm transportationForm,
			BindingResult result, HttpServletRequest request) {
		
		HttpSession session = request.getSession();
		session.getAttribute("idArray");
		
		
		String value1  = request.getParameter("saveButton");
		String value2  = request.getParameter("rejectDistrict");
		String value3  = request.getParameter("downLoadToExcel");
		
		System.out.println("value1" +  value1 +  "value2" + value2 + "value3" + value3);
		
		transportationValidator.validate(transportationForm, result);
		/*
		 * if (result.hasErrors()) { return ".Cde40Summary-index"; }
		 */
		for (int i = 0; i < transportationForm.getTransportationGridList().size(); i++)
			System.out.println("The grid values "
					+ transportationForm.getTransportationGridList().get(i).getId());
		cde40SummaryManager.saveOrUpdate(transportationForm);
		model.addAttribute("saved", true);
		return ".Cde40Summary-index";
	}

	@RequestMapping(value = "/edit/{id}", method = RequestMethod.GET)
	public String update(Model model, @PathVariable long id) {
		TransportationForm form = cde40SummaryManager.setupForm(id);
		model.addAttribute("transportationForm", form);
		return ".Cde40Summary-index";
	}

	@RequestMapping(value = "/delete/{id}", method = RequestMethod.GET)
	public String delete(@PathVariable long id, HttpServletRequest request) {
		cde40SummaryManager.delete(Transportation.class, id);
		return "redirect:" + RequestUtils.getContextPath(request) + "/list";
	}

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String list(Model model) {
		List<Transportation> transportations = cde40SummaryManager
				.findAll(Transportation.class);
		model.addAttribute("transportations", transportations);
		return ".Cde40Summary-list";
	}

}